# 2025.01.20
파이썬은 지켜야 할 문법이 적은게 특징이다.
C나 자바에 비해 좋다.
파이썬은 인터프리터 언어이다.
자료형 인티저, 플로트, 스트링 배웠다.
자료를 저장할 때, C언어의 포인터와 비슷하다. 그 값을 직접 저장하는 것이 아니라 주솟값을 저장하는 개념이다.
플로트에서 근삿값을 사용하기 떄문에 발생하는 플로팅 에러 주의하자.
스트링은 중간값을 변경할 수 없다.
슬라이싱할 때, 콜론 뒤의 숫자에 유의하자. 처음꺼 이상, 두번째꺼 미만이다.
기본 한줄 주석은 #
여러줄 주석은 드래그하고 Ctrl + /

# 2025.01.21
자료형 중 가장 많이 쓰는 것 : 리스트, 딕셔너리
리스트, 튜플, 레인지, 딕셔너리, 세트, None, Boolean
형변환

# 2025.01.22
함수 선언
def function_namee():
    """
    docs
    """
    function_act
    return

반롼값이 없는 함수도 있다.

parameter : 함수를 선언할 때
argument : 함수를 호출할 때

함수의 인자들의 종류가 여러가지 있다. 아예 신경 안쓰진 말자.
위치인자 : 그 위치에 있는 인자로 저장됨
기본인자 : 함수를 선언하며 default값을 넣어줄 수 있다. 입력을 생략하면 디폴트값이 들어간다.
키워드인자 : 함수를 호출할 때 키워드에 값을 직접 넣을 수 있다. 대신 위치인자보다 뒤에만 존재해야 한다. 앞에 넣고 뒤에는 위치인자 넣으면 안된다.
임의의, 임의의키워드 인자 : 여러 개가 들어올 때 쓴다.

기본적으로 함수는 하나의 명령만 수행하도록 만들어야 한다. 인자가 너무 많다면 필요없는 인자가 있거나, 함수가 복잡해지고 있지는 않은지 살펴보자.

재귀함수는 알고리즘 공부할 때 많이 나올듯.

외부에 있는 변수를 함수 내부에서 수정하려면 global로 선언 후 수정한다.

# 2025.01.23
반복문, 조건문
반복 : for, while
for x in y:
    ~~
y 안에 있는 요소들을 x로 반환하여 반복한다는 뜻. y는 시퀀스형 자료처럼 순서가 있을 수 있고, 딕셔너리처럼 없어도 된다.
중첩해서 쓸 수도 있고, 그러면 matrix처럼 보이기도 한다.
while x:
x 에 조건이 들어간다. 이 조건이 참일 경우 반복하고 거짓일 경우 while문 밖으로 나간다.
반드시 그 조건을 거짓으로 만들도록 하는 명령이 있어야 한다.
break는 그 반복을 멈춘다. 리스트에 찾고자 하는 요소를 찾는 경우처럼 쓰인다.
continue는 다음 반복으로 넘어간다. 리스트에서 짝수만 찾아서 값을 출력한다던가 하는 경우에 쓰인다.
pass는 아무 역할도 하지 않는다. 보통 미완성된 함수에서 그냥 코드를 돌려볼 때 쓰는 것 같다.

조건 : if, elif, else
특별한 것은 없다. C언어의 if, else if, else 와 완벽히 같은 역할을 한다.